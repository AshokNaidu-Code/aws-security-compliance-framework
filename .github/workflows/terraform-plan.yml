name: Terraform Plan

on:
  pull_request:
    branches:
      - main
    paths:
      - 'infrastructure/terraform/**'
      - '.github/workflows/terraform-*.yml'

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: 'us-east-1'
  WORKING_DIR: './infrastructure/terraform'

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-TerraformPlan
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false
      
      - name: Create terraform.tfvars
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          cat > terraform.tfvars <<EOF
          aws_region                            = "${{ secrets.TF_VAR_AWS_REGION }}"
          environment                           = "${{ secrets.TF_VAR_ENVIRONMENT }}"
          owner_email                           = "${{ secrets.TF_VAR_OWNER_EMAIL }}"
          enable_mfa_enforcement                = true
          guardduty_finding_publishing_frequency = "FIFTEEN_MINUTES"
          cloudtrail_s3_bucket_name             = "${{ secrets.TF_VAR_CLOUDTRAIL_BUCKET }}"
          enable_s3_protection                  = true
          enable_kubernetes_protection          = true
          config_recorder_name                  = "security-compliance-recorder"
          sns_email_endpoints                   = ["${{ secrets.TF_VAR_SNS_EMAIL }}"]
          EOF
      
      - name: Terraform Format Check
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform fmt -check -recursive
        continue-on-error: true
      
      - name: Terraform Init
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform init -input=false
      
      - name: Terraform Validate
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform validate
      
      - name: Terraform Plan
        id: plan
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          terraform plan -input=false -no-color -out=tfplan
          terraform show -no-color tfplan > plan_output.txt
        continue-on-error: true
      
      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ env.WORKING_DIR }}/tfplan
          retention-days: 5
      
      - name: Comment PR with Plan
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('${{ env.WORKING_DIR }}/plan_output.txt', 'utf8');
            const truncatedPlan = planOutput.length > 65000 ? planOutput.substring(0, 65000) + '\n... (truncated)' : planOutput;
            
            const output = `#### Terraform Plan üìù
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform
            ${truncatedPlan}
            \`\`\`
            
            </details>
            
            **Plan Status:** ${{ steps.plan.outcome }}
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*
            *Workflow: [${{ github.workflow }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
      
      - name: Plan Status Check
        if: steps.plan.outcome == 'failure'
        run: exit 1
